{"version":3,"sources":["components/UserRow.js","components/UserTable.js","App.js","reportWebVitals.js","index.js"],"names":["UserRow","props","user","cell","email","name","first","last","src","picture","thumbnail","alt","className","UserTable","style","width","users","map","App","state","employee","data","console","log","axios","get","then","res","returnedData","results","setState","this","d","idx","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAkBeA,EAhBC,SAACC,GACb,OACI,+BACI,6BAAKA,EAAMC,KAAKC,OAChB,6BAAKF,EAAMC,KAAKE,QAChB,+BAAKH,EAAMC,KAAKG,KAAKC,MAArB,IAA6BL,EAAMC,KAAKG,KAAKE,QAC7C,6BACI,qBACIC,IAAKP,EAAMC,KAAKO,QAAQC,UACxBC,IAAI,kBACJC,UAAU,yBCOfC,EAhBG,SAACZ,GACf,OACI,wBAAOa,MAAO,CAACC,MAAM,QAArB,UACA,+BACE,8CACA,uCACA,sCACA,4CAEDd,EAAMe,MAAMC,KAAI,SAACf,GAAD,OACb,cAAC,EAAD,CAASA,KAAMA,WCgDZgB,E,4MAnDbC,MAAQ,CACNC,SAAU,CAAC,CAAC,MAAQ,eAAgB,CAAC,MAAQ,YAC7CJ,MAAM,I,EAGVK,KAAO,CAAC,CAAE,KAAQ,SAAW,CAAE,KAAQ,U,uDAEvC,WAAqB,IAAD,OAChBC,QAAQC,IAAI,UACZC,IAAMC,IAAN,yCACKC,MAAK,SAAAC,GACF,IAAMC,EAAeD,EAAIN,KAAKQ,QAC9BP,QAAQC,IAAI,oBACZD,QAAQC,IAAIK,GAEZN,QAAQC,IAAI,EAAKJ,OAGjB,EAAKW,SAASF,GACdN,QAAQC,IAAI,gBAAiBD,QAAQC,IAAI,EAAKJ,OAC9CG,QAAQC,IAAI,qBACZ,EAAKO,SAAS,CAACd,MAAOY,S,oBAKlC,WAII,OAHAN,QAAQC,IAAIQ,KAAKZ,MAAMC,SAASS,SAChCP,QAAQC,IAAIQ,KAAKZ,OACjBG,QAAQC,IAAI,UAER,gCACI,iDACA,8BACKQ,KAAKV,KAAKJ,KAAI,SAAUe,EAAGC,GACxB,OAAQ,6BAAeD,EAAE3B,MAAR4B,QAGzB,8BACKF,KAAKZ,MAAMC,SAASH,KAAI,SAAUe,EAAGC,GAClC,OAAQ,6BAAeD,EAAE5B,OAAR6B,QAGzB,uBAEI,cAAC,EAAD,CAAWjB,MAAOe,KAAKZ,MAAMH,e,GA9C3BkB,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c4e32a34.chunk.js","sourcesContent":["import React from \"react\";\n\nconst UserRow = (props) => {\n    return (\n        <tr>\n            <td>{props.user.cell}</td>\n            <td>{props.user.email}</td>\n            <td>{props.user.name.first} {props.user.name.last}</td>\n            <td>\n                <img\n                    src={props.user.picture.thumbnail}\n                    alt=\"Profile Picture\" \n                    className=\"profilePicture\"/>\n            </td>\n        </tr>\n    )\n}\n\nexport default UserRow;","import React from \"react\";\nimport UserRow from \"./UserRow\";\n\nconst UserTable = (props) => {\n    return (\n        <table style={{width:\"100%\"}}>\n        <tr>\n          <th>Phone Number</th>\n          <th>Email</th>\n          <th>Name</th>\n          <th>Picture</th>\n        </tr>\n        {props.users.map((user) => (\n            <UserRow user={user}/>\n        ))}\n      </table>\n    )\n}\n\nexport default UserTable;","// import logo from './logo.svg';\nimport { Component } from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport UserTable from \"./components/UserTable\";\n\n\n//import PersonList from './utils/api.js';\n\nclass App extends Component {\n  state = {\n    employee: [{\"email\":\"placeholder\"}, {\"email\":\"hahahah\"}],\n    users:[]\n}\n//results[0]\ndata = [{ \"name\": \"test1\" }, { \"name\": \"test2\" }];\n\ncomponentDidMount() {\n    console.log('poopie');\n    axios.get(`https://randomuser.me/api/?results=10`)\n        .then(res => {\n            const returnedData = res.data.results;\n            console.log(\"fetched data----\");\n            console.log(returnedData);\n\n            console.log(this.state);\n            \n            //this.setState(returnedData);\n            this.setState(returnedData);\n            console.log(\"this.state: \"); console.log(this.state);\n            console.log(\"end f   data-----\");\n            this.setState({users: returnedData})\n        })\n}\n//{this.state.employee}                //this.state.employee.results.map\n\nrender() {\n    console.log(this.state.employee.results);\n    console.log(this.state);\n    console.log(\"render\");\n    return (\n        <div>\n            <p>Hi bro  hehehehe</p>\n            <div>\n                {this.data.map(function (d, idx) {\n                    return (<li key={idx}>{d.name}</li>)\n                })}\n            </div>\n            <div>\n                {this.state.employee.map(function (d, idx) {\n                    return (<li key={idx}>{d.email}</li>)\n                })}\n            </div>\n            <ul>\n            </ul>\n                <UserTable users={this.state.users}/>\n        </div>\n    )\n}\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}